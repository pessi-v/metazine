@use "../mixins/media";

*,
*::before,
*::after {
  box-sizing: border-box;
}

* {
  margin: 0;
  padding: 0;
}

html {
  overflow-y: scroll;
  height: 100%;
}

body {
  display: flex;
  flex-direction: column;
  min-height: 100%;

  background-color: var(--color-background);
  color: var(--color-text-body);
  line-height: var(--line-height-body);
  font-family: var(--font-family-neo-grotesque);
}

img,
picture,
svg {
  display: block;
  // max-width: 100%;
  opacity: 0.75;
}

input,
button,
textarea,
select {
  font: inherit;
}

select {
  border: var(--border);
  border-radius: var(--border-radius);
  height: 2.5rem;
  font-size: var(--font-size-s);
  background-color: var(--color-light);
}

h1,
h2,
h3,
h4,
h5,
h6 {
  color: var(--color-text-header);
  line-height: var(--line-height-headers);
  // font-family: var(--font-family-classical-humanist);
  font-family: var(--font-family-headlines);
}

h2 {
  font-size: var(--font-size-xxxl);

  @include media.media(tabletAndUp) {
    font-size: var(--font-size-xxxxl);
  }
}

h3 {
  font-size: var(--font-size-xl);
}

h4 {
  font-size: var(--font-size-l);
}

a {
  color: var(--color-text-body);
  text-decoration: none;
  transition: color 200ms;

  &[href^="http"],
  &[href^="www"] {
    &:hover,
    &:focus,
    &:active {
      color: var(--color-two);

      * {
        color: inherit;
      }
    }
  }

  &:not([href^="http"]):not([href^="www"]) {
    &:hover,
    &:focus,
    &:active {
      color: var(--color-one);

      * {
        color: inherit;
      }
    }
  }
}

a.hover-two {
  &:hover,
  &:focus,
  &:active {
    color: var(--color-two) !important;

    * {
      color: inherit;
    }
  }
}

label,
p {
  font-size: var(--font-size-s);
}

input[type="checkbox"] {
  margin-right: var(--space-xxxs);
  accent-color: var(--color-text-header);
}

blockquote {
  font-style: italic;
  font-family: var(--font-family-serif);

  p {
    font-size: var(--font-size-m);
  }
}

sup {
  vertical-align: top;
  position: relative;
  top: -0.5em;
  margin-right: 2px;
}

hr {
  // border: var(--border);
  color: var(--color-background);
  border-radius: var(--border-radius);
}

.line {
  height: 1px;
  border-top: var(--border);
  border-radius: var(--border-radius);
}

ul,
ol {
  padding-left: var(--space-m);
  display: flex;
  flex-direction: column;
  gap: var(--space-s); /* Adds consistent spacing between items */
  list-style-position: inside;
}

button,
.button {
  height: 2.5rem;
  border: var(--border);
  border-radius: var(--border-radius);
  // margin: var(--space-xxxs) 0 var(--space-xxxs) 0;
  padding: var(--space-xxxs);
  font-family: var(--font-family-headlines);
  color: var(--color-text-header);
  background-color: var(--color-light);
  cursor: unset;
  display: flex;
  justify-content: center;
  align-items: center;

  a {
    display: inline-block;
  }
}

button:active,
.button:active {
  transform: translateY(2px);
}

.flex-row {
  display: flex;
  flex-direction: row;
}

.flex-column {
  display: flex;
  flex-direction: column;
}

.justify-end {
  justify-content: flex-end;
}

.justify-center {
  justify-content: center;
}

.justify-space-between {
  justify-content: space-between;
}

.align-center {
  align-items: center;
}

.gap-s {
  gap: var(--space-s);
}
