.flex-column.comment-item style="padding-left: #{depth * 20}px;" data-controller="comment" data-comment-id=comment.id
  - if comment.deleted?
    .comment-header
      .comment-author
        span.deleted-author = "[deleted]"

    .comment-content.deleted-content
      p.deleted-text = "[deleted]"
  - else
    .comment-header
      .comment-author
        - if comment.federated_url
          = link_to comment.federated_url, target: "_blank", rel: "noopener" do
            strong = comment.author_name
            span.username = " (#{comment.author_username})"
        - else
          strong = comment.author_name
          span.username = " (#{comment.author_username})"

      .comment-actions
        - if logged_in?
          button.btn-reply-comment data-action="click->comment#toggleReply" type="button" Reply
        - if logged_in? && comment.user == current_user
          button.btn-edit-comment data-action="click->comment#toggleEdit" type="button" Edit
          = button_to "Delete", comment_path(comment), method: :delete, class: "btn-delete-comment", data: { confirm: "Are you sure you want to delete this comment?" }

    .comment-content data-comment-target="content"
      == comment.content

    .comment-edit-form style="display: none;" data-comment-target="editForm"
      = form_with(model: comment, url: comment_path(comment), method: :patch, class: "edit-comment-form") do |f|
        .form-group
          = f.text_area :content, rows: 4, class: "form-textarea", required: true
        .form-actions
          = f.submit "Save", class: "btn-primary"
          button.btn-cancel type="button" data-action="click->comment#cancelEdit" Cancel

    - if logged_in?
      .comment-reply-form style="display: none;" data-comment-target="replyForm"
        = form_with(model: Comment.new, url: comment_comments_path(comment), method: :post, class: "new-reply-form") do |f|
          .form-group
            = f.label :content, "Reply to #{comment.author_name}:", class: "form-label"
            = f.text_area :content, rows: 4, class: "form-textarea", placeholder: "Share your thoughts...", required: true
          .form-actions
            = f.submit "Post Reply", class: "btn-primary"
            button.btn-cancel type="button" data-action="click->comment#cancelReply" Cancel

  .comment-replies
    - comment.comments.each do |child_comment|
      = render partial: 'comments/reader_comment', locals: { comment: child_comment, depth: depth + 1 }