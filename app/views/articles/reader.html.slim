.instance-title
  = link_to('/') do
    h4.desktop
      = ENV['INSTANCE_NAME'].upcase.gsub(' ', '<br>').html_safe
    h4.mobile
      = ENV['INSTANCE_NAME'].upcase

.reader

  - if @article.image_url && !@content.match?(@article.image_url)
    = image_tag(@article.image_url, class: 'header-image custom-prop-image', data: { controller: "reader-image" })

  .article_headline
    = link_to(@article.url) do
      h2.headline
        = @article.title
  .flex-row.justify-space-between
    .source_and_reader_link
      = link_to(articles_by_source_path(@article.source_name)) do
        p.source
          = @article.source_name
      p.source
        = @article.published_at.strftime('%A %-d.%-m.%Y')
    / .flex-row.justify-end.align-center.gap-s data-controller="piper" data-piper-text-value=@text_to_speech_content data-piper-voice-id-value="en_US-hfc_female-medium"
    .tts_button data-controller="piper" data-piper-text-value=@text_to_speech_content data-piper-voice-id-value="en_US-hfc_female-medium"
      / button data-action="click->piper#predict"
        'Read article out loud
      button.predict_button data-piper-target="predictButton" data-action="click->piper#predict"
        'Listen
      select.tts_voices data-piper-target="voiceSelect" style="display:none;"
      / p Stored Voices
      ul data-piper-target="storedList" style="display:none;"
      / button data-action="click->piper#flush" data-piper-target="flushButton"
      /   'Flush storage

  .line
  .content
    = @content.html_safe

  .line
  .article-discussion
    - if @article.discussion
      h3 Discussion started

      - if @article.discussion&.messages&.any?
        - @article.discussion.messages.order(created_at: :asc).each do |message|
          .message
            .message-content= message.content
            .message-meta= message.created_at.strftime("%B %d, %Y at %H:%M")

      // Simple message form
      / = form_with(url: new_article_discussion_path(@article), method: :post, id: 'discussion-form', class: 'message-form') do |form|
    = form_with(url: discuss_path(@article), method: :post, id: 'discussion-form', class: 'message-form') do |form|
      .field
        = form.text_field :content, placeholder: 'Add your thoughts', required: true, class: 'message-input'
      .actions
        = form.submit 'Add message', class: 'btn btn-primary'